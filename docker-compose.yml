version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: ${DOCKER_USERNAME}/comconnect-frontend:latest
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:5000
      - REACT_APP_SOCKET_URL=http://localhost:5000
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    depends_on:
      - backend
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    image: ${DOCKER_USERNAME}/comconnect-backend:latest
    ports:
      - "5000:5000"
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - NODE_ENV=development
      - KAFKA_BROKER=kafka:9093
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_URI=mongodb+srv://${DB_USERNAME}:${DB_PASSWORD}@cluster0.t7rpzk9.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
      - ./comconnect-2b1d7-firebase-adminsdk-20r1n-c127902f6f.json:/app/backend/config/comconnect-2b1d7-firebase-adminsdk-20r1n-c127902f6f.json
    depends_on:
      - redis
      - kafka
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: ${DOCKER_USERNAME}/comconnect-redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  zookeeper:
    image: ${DOCKER_USERNAME}/comconnect-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka:
    image: ${DOCKER_USERNAME}/comconnect-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  app_network:
    driver: bridge

volumes:
  redis_data: