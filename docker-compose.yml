version: '3'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:5000
      - REACT_APP_SOCKET_URL=http://localhost:5000
      - NODE_ENV=development
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
      - WDS_SOCKET_PORT=0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    depends_on:
      - backend
    networks:
      - app_network
    restart: "no"
    stop_grace_period: 1m
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - KAFKA_BROKER=ec2-3-6-113-80.ap-south-1.compute.amazonaws.com:9092
      - KAFKA_CLIENT_ID=notification-service
      - KAFKA_GROUP_ID=notification-group
      - REDIS_HOST=ec2-3-6-113-80.ap-south-1.compute.amazonaws.com
      - REDIS_PORT=6379
      - MONGODB_URI=mongodb+srv://akshanshkaushal9:GRS7yWeIDcF8SEMQ@cluster0.t7rpzk9.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
    extra_hosts:
      - "ec2-3-6-113-80.ap-south-1.compute.amazonaws.com:3.6.113.80"
    networks:
      - app_network
    dns:
      - 8.8.8.8  # Add Google DNS
      - 8.8.4.4  # Backup DNS
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  app_network:
    driver: bridge